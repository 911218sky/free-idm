name: Auto Update IDM

on:
  schedule:
    # Run daily at 04:00 UTC
    - cron: '0 4 * * *'
  workflow_dispatch:    # Allow manual trigger
  push:
    branches:
      - main

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Check for IDM Updates
        id: check
        run: python .github/scripts/idm_updater.py
        # Expects outputs:
        #   new_version (true/false)
        #   version     (version number)
        #   download_url

      - name: Download New IDM Version
        if: steps.check.outputs.new_version == 'true'
        run: |
          mkdir -p downloads
          wget -O downloads/idm_${{ steps.check.outputs.version }}.exe \
               "${{ steps.check.outputs.download_url }}"

      - name: Write current version to current_version.txt
        if: steps.check.outputs.new_version == 'true'
        run: echo "${{ steps.check.outputs.version }}" > current_version.txt

      - name: Commit version update
        if: steps.check.outputs.new_version == 'true'
        run: |
          git config --local user.name "sky1218"
          git config --local user.email "sky@sky1218.com"
          git add current_version.txt
          git commit -m "Update IDM to version ${{ steps.check.outputs.version }}"
          git push

      - name: Get Existing Release Info
        if: steps.check.outputs.new_version == 'true'
        id: get_rel
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = 'IDM';
            const { data: release } = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag,
            });
            core.setOutput('upload_url', release.upload_url);
            core.setOutput('release_id', release.id);

      - name: Upload New Asset to Existing Release
        if: steps.check.outputs.new_version == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_rel.outputs.upload_url }}
          asset_path: downloads/idm_${{ steps.check.outputs.version }}.exe
          asset_name: idm_${{ steps.check.outputs.version }}.exe
          asset_content_type: application/octet-stream

      - name: Update Release Notes
        if: steps.check.outputs.new_version == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `Internet Download Manager has been updated to version ${{ steps.check.outputs.version }}

            Last updated: ${(new Date()).toISOString()}
            (Automatically updated by GitHub Actions)`;

            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: parseInt('${{ steps.get_rel.outputs.release_id }}'),
              body,
            });