name: Auto Update IDM Release Assets

on:
  schedule:
    - cron: '0 4 * * *'   # daily at 04:00 UTC
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  check-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        name: Checkout code

      - uses: actions/setup-python@v4
        name: Set up Python 3.12
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        if: always()
        run: |
          pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Check for IDM updates
        id: check
        run: python .github/scripts/idm_updater.py
        # Expects to emit via `echo "::set-output name=...::..."`:
        #   new_version  (true/false)
        #   version      (e.g. 6.41)
        #   download_url

      - name: Download new IDM installer
        if: steps.check.outputs.new_version == 'true'
        run: |
          mkdir -p build
          wget -O build/idm_${{ steps.check.outputs.version }}.exe \
               "${{ steps.check.outputs.download_url }}"
          echo "version=${{ steps.check.outputs.version }}" > build/current_version.txt

      - name: Get existing Release upload_url
        if: steps.check.outputs.new_version == 'true'
        id: get_rel
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = 'IDM';
            const { data: release } = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag
            });
            // IMPORTANT: keep the `{?name,label}` placeholder
            core.setOutput('upload_url', release.upload_url);
            core.setOutput('release_id', release.id);
            console.log(`Found release #${release.id}, upload_url=${release.upload_url}`);

      - name: Upload IDM installer
        if: steps.check.outputs.new_version == 'true'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_rel.outputs.upload_url }}
          asset_path: build/idm_${{ steps.check.outputs.version }}.exe
          asset_name: idm_${{ steps.check.outputs.version }}.exe
          asset_content_type: application/octet-stream

      - name: Upload version file
        if: steps.check.outputs.new_version == 'true'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_rel.outputs.upload_url }}
          asset_path: build/current_version.txt
          asset_name: current_version.txt
          asset_content_type: text/plain

      - name: Done
        if: steps.check.outputs.new_version == 'true'
        run: echo "âœ… Uploaded IDM v${{ steps.check.outputs.version }} to existing Release."