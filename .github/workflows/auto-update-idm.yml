name: Auto Update IDM Release Assets

on:
  schedule:
    # Run daily at 04:00 UTC
    - cron: '0 4 * * *'
  workflow_dispatch:      # Allow manual trigger
  push:
    branches:
      - main            # Or your default branch

jobs:
  update-assets:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # Required to read/write Releases

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Check for IDM updates
        id: check-updates
        run: python .github/scripts/idm_updater.py
        # This script should set GitHub Outputs:
        #   new_version (true/false)
        #   version     (e.g. "6.41")
        #   download_url

      # Download the new installer if there is a new version
      - name: Download new IDM installer
        if: steps.check-updates.outputs.new_version == 'true'
        run: |
          mkdir -p build
          wget -O build/idm_${{ steps.check-updates.outputs.version }}.exe \
               "${{ steps.check-updates.outputs.download_url }}"
          echo "version=${{ steps.check-updates.outputs.version }}" > build/version.txt

      - name: Get release metadata
        if: steps.check-updates.outputs.new_version == 'true'
        id: get_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = 'IDM';
            const { data: release } = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              tag
            });
            const uploadUrl = release.upload_url.replace(/\{\?name,label\}$/, '');
            core.setOutput('upload_url', uploadUrl);
            core.setOutput('release_id', release.id);
            console.log(`Found Release ID ${release.id}, upload_url=${uploadUrl}`);

      - name: Upload IDM installer to Release
        if: steps.check-updates.outputs.new_version == 'true'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: build/idm_${{ steps.check-updates.outputs.version }}.exe
          asset_name: idm_${{ steps.check-updates.outputs.version }}.exe
          asset_content_type: application/octet-stream

      - name: Upload version.txt to Release
        if: steps.check-updates.outputs.new_version == 'true'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: build/version.txt
          asset_name: version.txt
          asset_content_type: text/plain