name: Auto Update IDM

on:
  schedule:
    # Run daily at 04:00 UTC
    - cron: '0 4 * * *'
  workflow_dispatch:  # Allow manual trigger
  push:
    branches:
      - main

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Check for IDM updates
        id: check-updates
        run: python .github/scripts/idm_updater.py
        # This script should output:
        #   new_version (true/false)
        #   version (version number)
        #   download_url (download link)

      - name: Download new IDM version
        if: steps.check-updates.outputs.new_version == 'true'
        run: |
          mkdir -p downloads
          wget -O downloads/idm_${{ steps.check-updates.outputs.version }}.exe \
               "${{ steps.check-updates.outputs.download_url }}"

      - name: Get current date
        id: date
        run: echo "current_date=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

      - name: Commit version update
        if: steps.check-updates.outputs.new_version == 'true'
        run: |
          git config user.email "sky@sky1218.com"
          git config user.name "sky1218"
          git add -f current_version.txt
          git commit -m "Update IDM to version ${{ steps.check-updates.outputs.version }}"
          git push

      - name: Update version tag
        if: steps.check-updates.outputs.new_version == 'true'
        run: |
          git config user.email "sky@sky1218.com"
          git config user.name "sky1218"
          git tag -d IDM || true
          git push origin :refs/tags/IDM || true
          git tag IDM
          git push origin IDM

      - name: Update existing IDM release
        if: steps.check-updates.outputs.new_version == 'true'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "IDM"
          name: "Internet Download Manager (Latest)"
          files: |
            downloads/idm_${{ steps.check-updates.outputs.version }}.exe
            current_version.txt
          body: |
            Internet Download Manager has been updated to version ${{ steps.check-updates.outputs.version }}

            Last updated: ${{ steps.date.outputs.current_date }}
            Automatically updated by GitHub Actions
          update_existing: true
          draft: false

      - name: Publish (un-draft) the IDM release
        if: steps.check-updates.outputs.new_version == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const tag = 'IDM';
            // Retrieve the release by tag
            const { data: release } = await github.rest.repos.getReleaseByTag({
              owner, repo, tag
            });
            // Force publish the release
            await github.rest.repos.updateRelease({
              owner,
              repo,
              release_id: release.id,
              draft: false
            });
            console.log(`Release '${tag}' (id=${release.id}) has been published`);